{"version":3,"file":"src_app_main_apps_todo_todo_module_ts.js","mappings":"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","sources":["./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","./src/app/main/apps/todo/todo-list/todo-list.component.ts","./src/app/main/apps/todo/todo-list/todo-list.component.html","./src/app/main/apps/todo/todo-management.service.ts","./src/app/main/apps/todo/todo-sidebars/todo-main-sidebar/todo-main-sidebar.component.ts","./src/app/main/apps/todo/todo-sidebars/todo-main-sidebar/todo-main-sidebar.component.html","./src/app/main/apps/todo/todo-sidebars/todo-right-sidebar/todo-right-sidebar.component.ts","./src/app/main/apps/todo/todo-sidebars/todo-right-sidebar/todo-right-sidebar.component.html","./src/app/main/apps/todo/todo.component.ts","./src/app/main/apps/todo/todo.component.html","./src/app/main/apps/todo/todo.model.ts","./src/app/main/apps/todo/todo.module.ts","./src/app/main/apps/todo/todo.service.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n  selector: 'app-todo-list-item',\n  templateUrl: './todo-list-item.component.html'\n})\nexport class TodoListItemComponent implements OnInit {\n  // Input Decorator\n  @Input() todo: Todo;\n\n  // Public\n  public selected;\n\n  /**\n   * Constructor\n   *\n   * @param {TodoService} _todoService\n   */\n  constructor(private _todoService: TodoService) {}\n\n  /**\n   *\n   * @param stateRef\n   */\n  checkboxStateChange(stateRef) {\n    this.todo.completed = stateRef;\n    this._todoService.updateCurrentTodo(this.todo);\n  }\n\n  ngOnInit(): void {}\n}\n","<!-- Todo List Item -->\n<li class=\"todo-item\" [class.completed]=\"todo.completed\">\n  <div class=\"todo-title-wrapper\">\n    <div class=\"todo-title-area\">\n      <i data-feather=\"more-vertical\" class=\"drag-icon\"></i>\n      <div class=\"title-wrapper\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input todo-checkbox\" id=\"customCheck{{ todo.id }}\" name=\"customCheck{{ todo.id }}\" [(ngModel)]=\"todo.completed\" [checked]=\"todo.completed\" (click)=\"$event.stopPropagation()\" (ngModelChange)=\"checkboxStateChange($event)\" />\n          <label class=\"custom-control-label\" for=\"customCheck{{ todo.id }}\"></label>\n        </div>\n        <span class=\"todo-title\">{{ todo.title }}</span>\n      </div>\n    </div>\n    <div class=\"todo-item-action\">\n      <div class=\"badge-wrapper mr-1\">\n        <div\n          class=\"badge badge-pill badge-light-primary text-capitalize\"\n          [ngClass]=\"{\n            'badge-light-primary': todo.priority == 'team',\n            'badge-light-success': todo.priority == 'low',\n            'badge-light-danger': todo.priority == 'high',\n            'badge-light-warning': todo.priority == 'medium',\n            'badge-light-info': todo.priority == 'update'\n          }\"\n        >\n          {{ todo.priority }}\n        </div>\n      </div>\n      <small class=\"text-nowrap text-muted mr-1\">{{ todo.due_date | date : \" MMM d\" }}</small>\n      <ng-template #customAvatar>\n        <div\n          class=\"avatar\"\n          *ngIf=\"todo.assignee; else noAvatar\"\n          [ngClass]=\"{\n            'bg-light-primary': todo?.tags[0] == 'team',\n            'bg-light-success': todo?.tags[0] == 'low',\n            'bg-light-danger': todo?.tags[0] == 'high',\n            'bg-light-warning': todo?.tags[0] == 'medium',\n            'bg-light-info': todo?.tags[0] == 'update'\n          }\"\n        >\n          <div class=\"avatar-content\">{{ todo.assignee }}</div>\n        </div>\n        <ng-template #noAvatar>\n          <div class=\"avatar bg-light-secondary\">\n            <div class=\"avatar-content\"><i data-feather=\"user\"></i></div>\n          </div>\n        </ng-template>\n      </ng-template>\n    </div>\n  </div>\n</li>\n<!--/ Todo List Item -->\n","import { Component, OnInit } from \"@angular/core\";\nimport { DragulaService } from \"ng2-dragula\";\n\nimport { CoreSidebarService } from \"@core/components/core-sidebar/core-sidebar.service\";\n\nimport { Todo } from \"app/main/apps/todo/todo.model\";\nimport { TodoService } from \"app/main/apps/todo/todo.service\";\nimport { TodoManagementService } from \"../todo-management.service\";\n\n@Component({\n  selector: \"app-todo-list\",\n  templateUrl: \"./todo-list.component.html\",\n})\nexport class TodoListComponent implements OnInit {\n  // Public\n  public todos: Todo[];\n\n  /**\n   * Constructor\n   *\n   * @param {TodoService} _todoService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _dragulaService: DragulaService, private _todoService: TodoService, private _coreSidebarService: CoreSidebarService, private todoService: TodoManagementService) {\n    // Drag And Drop With Handle\n    _dragulaService.destroy(\"todo-tasks-drag-area\");\n    _dragulaService.createGroup(\"todo-tasks-drag-area\", {\n      moves: function (el, container, handle) {\n        return handle.classList.contains(\"drag-icon\");\n      },\n    });\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param nameRef\n   */\n  toggleSidebar(nameRef): void {\n    this._coreSidebarService.getSidebarRegistry(nameRef).toggleOpen();\n  }\n\n  /**\n   * Update Sort\n   *\n   * @param sortRef\n   */\n  updateSort(sortRef) {\n    this._todoService.sortTodos(sortRef);\n  }\n\n  /**\n   * Update Query\n   *\n   * @param queryRef\n   */\n  updateQuery(queryRef) {\n    this._todoService.getTodosBySearch(queryRef.target.value);\n  }\n\n  /**\n   * Open Todo\n   *\n   * @param idRef\n   */\n  openTodo(idRef) {\n    this._todoService.setCurrentTodo(idRef);\n    this._coreSidebarService.getSidebarRegistry(\"todo-sidebar-right\").toggleOpen();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe Todos change\n    this._todoService.onTodoDataChange.subscribe((response) => (this.todos = response));\n    // this.getTodo();\n  }\n\n  // async getTodo(): Promise<void> {\n  //   let { data: todo, error } = await this.todoService.getTodo();\n\n  //   if (error) {\n  //     console.error(error);\n  //   } else {\n  //     this.todos = todo;\n  //   }\n  // }\n}\n","<!-- Todo List -->\n<div class=\"todo-app-list\">\n  <!-- Todo search -->\n  <div class=\"app-fixed-search d-flex align-items-center\">\n    <div class=\"sidebar-toggle d-block d-lg-none ml-1\">\n      <button class=\"btn p-0\" (click)=\"toggleSidebar('todo-sidebar-main')\">\n        <i data-feather=\"menu\" [size]=\"23\"></i>\n      </button>\n    </div>\n\n    <div class=\"d-flex align-content-center justify-content-between w-100\">\n      <div class=\"input-group input-group-merge\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\"><i data-feather=\"search\" class=\"text-muted\"></i></span>\n        </div>\n        <input type=\"text\" class=\"form-control\" id=\"todo-search\" placeholder=\"Search todo\" aria-label=\"Search...\" aria-describedby=\"todo-search\" (keyup)=\"updateQuery($event)\" />\n      </div>\n    </div>\n    <div ngbDropdown>\n      <a ngbDropdownToggle href=\"javascript:void(0);\" class=\"hide-arrow mr-1\" id=\"todoActions\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        <i data-feather=\"more-vertical\" [size]=\"18\" class=\"text-body\"></i>\n      </a>\n      <div ngbDropdownMenu class=\"dropdown-menu-right\" aria-labelledby=\"todoActions\">\n        <a ngbDropdownItem class=\"sort-asc\" routerLink=\"/apps/todo\" (click)=\"updateSort('')\">Reset Sort</a>\n        <a ngbDropdownItem class=\"sort-asc\" (click)=\"updateSort('title-asc')\">Sort A - Z</a>\n        <a ngbDropdownItem class=\"sort-desc\" (click)=\"updateSort('title-desc')\">Sort Z - A</a>\n        <a ngbDropdownItem class=\"\" (click)=\"updateSort('assignee')\">Sort Assignee</a>\n        <a ngbDropdownItem class=\"\" (click)=\"updateSort('due-date')\">Sort Due Date</a>\n      </div>\n    </div>\n  </div>\n  <!--/ Todo search -->\n\n  <!-- Todo List -->\n  <div class=\"todo-task-list-wrapper list-group\" [perfectScrollbar]>\n    <ul class=\"todo-task-list media-list\" id=\"todo-task-list\" dragula=\"todo-tasks-drag-area\">\n      <app-todo-list-item [todo]=\"todo\" *ngFor=\"let todo of todos; let i = index\" (click)=\"openTodo(todo.id); $event.stopPropagation()\"></app-todo-list-item>\n      <!-- <ng-container *ngIf=\"todos.length; else noResults\"></ng-container> -->\n    </ul>\n\n    <ng-template #noResults>\n      <div class=\"no-results show\">\n        <h5>No Items Found</h5>\n      </div>\n    </ng-template>\n  </div>\n  <!--/ Todo List -->\n</div>\n<!--/ Todo List -->\n","import { Injectable } from \"@angular/core\";\nimport { Session, SupabaseClient, createClient } from \"@supabase/supabase-js\";\nimport { environment } from \"environments/environment\";\nimport { Todo } from \"./todo.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TodoManagementService {\n  private supabase: SupabaseClient;\n  constructor() {\n    this.supabase = createClient(environment.supabase.url, environment.supabase.key);\n  }\n\n  getTodo() {\n    return this.supabase.from(\"todo\").select(\"*\").eq(\"deleted\", false).order(\"id\", { ascending: true });\n  }\n\n  getImportantTodo() {\n    return this.supabase.from(\"todo\").select(\"*\").eq(\"completed\", false).eq(\"important\", true).order(\"id\", { ascending: true });\n  }\n\n  getDeletedTodo() {\n    return this.supabase.from(\"todo\").select(\"*\").eq(\"deleted\", true).order(\"id\", { ascending: true });\n  }\n\n  getCompletedTodo() {\n    return this.supabase.from(\"todo\").select(\"*\").eq(\"completed\", true).order(\"id\", { ascending: true });\n  }\n\n  getTodoViaPriority(priority) {\n    return this.supabase.from(\"todo\").select(\"*\").eq(\"completed\", false).eq(\"priority\", priority).order(\"id\", { ascending: true });\n  }\n\n  createNewTodo(todo: Todo) {\n    return this.supabase.from(\"todo\").insert(todo).single();\n  }\n\n  updateTodo(todo: Todo) {\n    return this.supabase.from(\"todo\").update(todo).eq(\"id\", todo.id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n  selector: 'app-todo-main-sidebar',\n  templateUrl: './todo-main-sidebar.component.html'\n})\nexport class TodoMainSidebarComponent implements OnInit {\n  // Public\n  public filters: Array<{}>;\n  public tags: Array<{}>;\n\n  /**\n   * Constructor\n   *\n   * @param {TodoService} _todoService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _coreSidebarService: CoreSidebarService, private _todoService: TodoService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param nameRef\n   */\n  createNewTodo(nameRef, closeNameRef): void {\n    this._coreSidebarService.getSidebarRegistry(nameRef).toggleOpen();\n    this._coreSidebarService.getSidebarRegistry(closeNameRef).toggleOpen();\n    this._todoService.createNewTodo();\n  }\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param nameRef\n   */\n  toggleSidebar(nameRef): void {\n    this._coreSidebarService.getSidebarRegistry(nameRef).toggleOpen();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    this._todoService.onFiltersChange.subscribe(response => (this.filters = response));\n    this._todoService.onTagsChange.subscribe(response => (this.tags = response));\n  }\n}\n","<!-- Main Sidebar -->\n<div class=\"main-sidebar sidebar\">\n  <div class=\"sidebar-content todo-sidebar\">\n    <div class=\"todo-app-menu\" [perfectScrollbar]>\n      <div class=\"add-task\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary btn-block\"\n          (click)=\"createNewTodo('todo-sidebar-right', 'todo-sidebar-main')\"\n          rippleEffect\n        >\n          Add Task\n        </button>\n      </div>\n      <div class=\"sidebar-menu-list\">\n        <div class=\"list-group list-group-filters\">\n          <a\n            *ngFor=\"let filter of filters\"\n            [routerLink]=\"'/apps/todo/' + filter.handle\"\n            [routerLinkActive]=\"'active'\"\n            class=\"list-group-item list-group-item-action\"\n            (click)=\"toggleSidebar('todo-sidebar-main')\"\n          >\n            <i [data-feather]=\"filter.icon\" [size]=\"18\" class=\"mr-75\"></i>\n            <span class=\"align-middle\">{{ filter.title }}</span>\n          </a>\n        </div>\n        <div class=\"mt-3 px-2 d-flex justify-content-between\">\n          <h6 class=\"section-label mb-1\">Tags</h6>\n          <i data-feather=\"plus\" class=\"cursor-pointer\"></i>\n        </div>\n        <div class=\"list-group list-group-labels\">\n          <a\n            *ngFor=\"let tag of tags\"\n            [routerLink]=\"'/apps/todo/tag/' + tag.handle\"\n            [routerLinkActive]=\"'active'\"\n            class=\"list-group-item list-group-item-action d-flex align-items-center\"\n            (click)=\"toggleSidebar('todo-sidebar-main')\"\n          >\n            <span class=\"bullet bullet-sm mr-1 {{ tag.color }}\"></span>{{ tag.title }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!--/ Main Sidebar -->\n","import { Component, OnInit, ViewEncapsulation, ElementRef, ViewChild } from \"@angular/core\";\n\nimport { CoreSidebarService } from \"@core/components/core-sidebar/core-sidebar.service\";\n\nimport { Todo } from \"app/main/apps/todo/todo.model\";\nimport { TodoService } from \"app/main/apps/todo/todo.service\";\n\n@Component({\n  selector: \"app-todo-right-sidebar\",\n  templateUrl: \"./todo-right-sidebar.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TodoRightSidebarComponent implements OnInit {\n  // Public\n  public isDataEmpty;\n  public todo: Todo;\n  public tags;\n  public selectTags;\n  public selectAssignee;\n\n  public tag;\n\n  @ViewChild(\"dueDateRef\") private dueDateRef: any;\n\n  public dueDateOptions = {\n    altInput: true,\n    mode: \"single\",\n    altInputClass: \"form-control flat-picker flatpickr-input invoice-edit-input\",\n    altFormat: \"F j, Y\",\n    dateFormat: \"Y-m-d\",\n  };\n\n  /**\n   * Constructor\n   *\n   * @param {TodoService} _todoService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _todoService: TodoService, private _coreSidebarService: CoreSidebarService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Close Sidebar\n   */\n  closeSidebar() {\n    this._coreSidebarService.getSidebarRegistry(\"todo-sidebar-right\").toggleOpen();\n  }\n\n  /**\n   * Update Todo\n   */\n  updateTodo(todoForm) {\n    //! Fix: Temp fix till ng2-flatpicker support ng-modal (Getting NG0100: Expression has changed after it was checked error if we use ng-model with ng2-flatpicker)\n    this.todo.due_date = this.dueDateRef.flatpickrElement.nativeElement.children[0].value;\n    this.todo.priority = todoForm.value.addTag[0];\n    this._todoService.updateCurrentTodo(this.todo);\n    this.closeSidebar();\n  }\n\n  /**\n   * Add Todo\n   */\n  addTodo(todoForm) {\n    if (todoForm.valid) {\n      //! Fix: Temp fix till ng2-flatpicker support ng-modal\n      this.todo.priority = todoForm.priority;\n      this.todo.due_date = this.dueDateRef.flatpickrElement.nativeElement.children[0].value;\n      this._todoService.updateCurrentTodo(this.todo);\n      this.closeSidebar();\n    }\n  }\n\n  /**\n   * Delete Todo\n   */\n  deleteTodo() {\n    this.todo.deleted = !this.todo.deleted;\n    this._todoService.updateCurrentTodo(this.todo);\n    this.closeSidebar();\n  }\n\n  /**\n   * Toggle Complete\n   */\n  toggleComplete() {\n    this.todo.completed = !this.todo.completed;\n    this._todoService.updateCurrentTodo(this.todo);\n    this.closeSidebar();\n  }\n\n  /**\n   * Toggle Important\n   */\n  toggleImportant() {\n    this.todo.important = !this.todo.important;\n    this._todoService.updateCurrentTodo(this.todo);\n    this.closeSidebar();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    this._todoService.onCurrentTodoChange.subscribe((response) => {\n      if (Object.keys(response).length > 0) {\n        this.todo = response;\n\n        this.tag = [this.todo.priority];\n        this.isDataEmpty = false;\n      } else {\n        this.todo = new Todo();\n\n        this.isDataEmpty = true;\n      }\n    });\n    this._todoService.onTagsChange.subscribe((response) => {\n      this.selectTags = response.map((tagRef) => {\n        return tagRef.handle;\n      });\n    });\n\n    this._todoService.onAssigneeChange.subscribe((assigneeRef) => {\n      this.selectAssignee = assigneeRef;\n    });\n  }\n}\n","<!-- Right Sidebar -->\n<div class=\"modal-dialog sidebar-lg\">\n  <div class=\"modal-content p-0\">\n    <form id=\"form-modal-todo\" class=\"todo-modal needs-validation\" (ngSubmit)=\"(todoForm.form.valid)\" #todoForm=\"ngForm\">\n      <div class=\"modal-header align-items-center mb-1\">\n        <h5 *ngIf=\"isDataEmpty === true; else updateTodosRef\" class=\"modal-title\">Add Task</h5>\n        <ng-template #updateTodosRef>\n          <button (click)=\"toggleComplete()\" class=\"btn btn-sm\" [ngClass]=\"todo.completed ? 'btn-outline-success' : 'btn-outline-secondary'\" rippleEffect>\n            {{ todo.completed ? \"Complete\" : \"Mark Complete\" }}\n          </button>\n        </ng-template>\n        <div class=\"todo-item-action d-flex align-items-center justify-content-between ml-auto\">\n          <button *ngIf=\"isDataEmpty === false\" (click)=\"deleteTodo()\" type=\"button\" class=\"todo-item-favorite cursor-pointer mr-75 btn p-0\">\n            <i data-feather=\"trash\" [size]=\"18\"></i>\n          </button>\n\n          <button class=\"todo-favorite btn pr-75 p-0\" (click)=\"toggleImportant()\">\n            <i class=\"fa font-medium-3\" [ngClass]=\"{ 'fa-star text-warning': todo.important === true, 'fa-star-o': todo.important === false }\"></i>\n          </button>\n          <button (click)=\"closeSidebar()\" type=\"button\" class=\"close font-large-1 font-weight-normal py-0\" data-dismiss=\"modal\" aria-label=\"Close\">×</button>\n        </div>\n      </div>\n      <div class=\"modal-body flex-grow-1 pb-sm-0 pb-3\">\n        <div class=\"action-tags\">\n          <div class=\"form-group\">\n            <label for=\"todoTitleAdd\" class=\"form-label\">Title</label>\n            <input type=\"text\" id=\"todoTitleAdd\" name=\"addTitle\" class=\"new-todo-item-title form-control\" [class.error]=\"todoForm.submitted && TDNameRef.invalid\" placeholder=\"Title\" [(ngModel)]=\"todo.title\" #TDNameRef=\"ngModel\" required />\n            <span *ngIf=\"todoForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n              <small class=\"form-text text-danger\" *ngIf=\"TDNameRef.errors.required\">This field is required!</small>\n            </span>\n          </div>\n\n          <div class=\"form-group position-relative\">\n            <label for=\"task-due-date\" class=\"form-label\">Due Date</label>\n            <ng2-flatpickr [config]=\"dueDateOptions\" #dueDateRef name=\"addDueDate\" [setDate]=\"todo.due_date\"></ng2-flatpickr>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"task-tag\" class=\"form-label d-block\">Tag</label>\n            <ng-select [items]=\"selectTags\" [multiple]=\"true\" [closeOnSelect]=\"false\" [searchable]=\"false\" bindLabel=\"name\" [(ngModel)]=\"tag\" name=\"addTag\"> </ng-select>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">Description</label>\n\n            <quill-editor name=\"addDescription\" customToolbarPosition=\"'bottom'\" [(ngModel)]=\"todo.description\" class=\"border-bottom-0\" placeholder=\"Write Your Description\">\n              <div quill-editor-toolbar>\n                <div class=\"d-flex justify-content-end desc-toolbar border-top-0\">\n                  <span class=\"ql-formats mr-0\">\n                    <button class=\"ql-bold\"></button>\n                    <button class=\"ql-italic\"></button>\n                    <button class=\"ql-underline\"></button>\n                    <button class=\"ql-align\"></button>\n                    <button class=\"ql-link\"></button>\n                  </span>\n                </div>\n              </div>\n            </quill-editor>\n          </div>\n        </div>\n        <div class=\"form-group my-1\">\n          <button type=\"submit\" class=\"btn btn-primary add-todo-item mr-1\" *ngIf=\"isDataEmpty === true\" (click)=\"addTodo(todoForm)\" rippleEffect>Add</button>\n          <button type=\"button\" class=\"btn btn-primary update-btn update-todo-item mr-1\" *ngIf=\"isDataEmpty === false\" (click)=\"updateTodo(todoForm)\" rippleEffect>Update</button>\n          <button class=\"btn btn-outline-secondary add-todo-item\" type=\"button\" (click)=\"closeSidebar()\" data-dismiss=\"modal\" rippleEffect>Close</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<!--/ Right Sidebar -->\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'todo-application' }\n})\nexport class TodoComponent {}\n","<div class=\"content-area-wrapper container-xxl p-0\">\n  <!-- Todo Main Sidebar (Filter) -->\n  <core-sidebar\n    class=\"sidebar-left\"\n    name=\"todo-sidebar-main\"\n    overlayClass=\"body-content-overlay\"\n    collapsibleSidebar=\"bs-gt-lg\"\n  >\n    <app-todo-main-sidebar></app-todo-main-sidebar>\n  </core-sidebar>\n  <!--/ Todo Main Sidebar -->\n\n  <!-- content-right -->\n  <div class=\"content-right\">\n    <div class=\"content-wrapper container-xxl p-0\">\n      <div class=\"content-body\">\n        <!-- Todo List -->\n        <app-todo-list></app-todo-list>\n        <!--/ Todo List -->\n\n        <!-- Todo Right Sidebar (Detail) -->\n        <core-sidebar\n          class=\"modal modal-slide-in sidebar-todo-modal fade\"\n          name=\"todo-sidebar-right\"\n          overlayClass=\"modal-backdrop\"\n          hideOnEsc=\"true\"\n        >\n          <app-todo-right-sidebar></app-todo-right-sidebar>\n        </core-sidebar>\n        <!--/ Todo Right Sidebar -->\n      </div>\n    </div>\n  </div>\n  <!--/ content-right -->\n</div>\n","export class Todo {\n  id? = undefined;\n  title = \"\";\n  due_date = \"\";\n  description = \"\";\n  tag = undefined;\n  completed = false;\n  deleted = false;\n  important = false;\n  priority = \"\";\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DragulaModule } from 'ng2-dragula';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { QuillModule } from 'ngx-quill';\n\nimport { CoreSidebarModule } from '@core/components';\nimport { CoreCommonModule } from '@core/common.module';\n\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/todo-sidebars/todo-main-sidebar/todo-main-sidebar.component';\nimport { TodoRightSidebarComponent } from 'app/main/apps/todo/todo-sidebars/todo-right-sidebar/todo-right-sidebar.component';\n\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n// routing\nconst routes: Routes = [\n  {\n    path: ':filter',\n    component: TodoComponent,\n    resolve: {\n      data: TodoService\n    }\n  },\n  {\n    path: 'tag/:tag',\n    component: TodoComponent,\n    resolve: {\n      data: TodoService\n    }\n  },\n  {\n    path: '**',\n    redirectTo: 'all',\n    data: { animation: 'todo' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    TodoComponent,\n    TodoListComponent,\n    TodoMainSidebarComponent,\n    TodoRightSidebarComponent,\n    TodoListItemComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    CoreSidebarModule,\n    QuillModule.forRoot(),\n    NgSelectModule,\n    DragulaModule.forRoot(),\n    NgbModule,\n    Ng2FlatpickrModule,\n    PerfectScrollbarModule\n  ],\n  providers: [TodoService]\n})\nexport class TodoModule {}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve } from \"@angular/router\";\n\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { Todo } from \"./todo.model\";\nimport { TodoManagementService } from \"./todo-management.service\";\nimport { rejects } from \"assert\";\n\n@Injectable()\nexport class TodoService implements Resolve<any> {\n  // Public\n  public todos: Todo[];\n  public assignee;\n  public filters;\n  public tags;\n  public tempTodos: Todo[];\n  public currentTodo;\n  public sortParamRef = \"id\";\n\n  public onTodoDataChange: BehaviorSubject<any>;\n  public onCurrentTodoChange: BehaviorSubject<any>;\n  public onAssigneeChange: BehaviorSubject<any>;\n  public onFilterChange: BehaviorSubject<any>;\n  public onTagChange: BehaviorSubject<any>;\n  public onSearchQueryChange: BehaviorSubject<any>;\n  public onFiltersChange: BehaviorSubject<any>;\n  public onTagsChange: BehaviorSubject<any>;\n\n  // Private\n  private routeParams: any;\n  private sortTodoRef = (key) => (a, b) => {\n    let fieldA;\n    let fieldB;\n\n    // If sorting is by dueDate => Convert data to date\n    if (key === \"dueDate\") {\n      fieldA = new Date(a[key]);\n      fieldB = new Date(b[key]);\n      // eslint-disable-next-line brace-style\n    }\n\n    // If sorting is by assignee => Use `fullName` of assignee\n    else if (key === \"assignee\") {\n      fieldA = a.assignee ? a.assignee.fullName : null;\n      fieldB = b.assignee ? b.assignee.fullName : null;\n    } else {\n      fieldA = a[key];\n      fieldB = b[key];\n    }\n\n    let comparison = 0;\n\n    if (fieldA === fieldB) {\n      comparison = 0;\n    } else if (fieldA === null) {\n      comparison = 1;\n    } else if (fieldB === null) {\n      comparison = -1;\n    } else if (fieldA > fieldB) {\n      comparison = 1;\n    } else if (fieldA < fieldB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  };\n\n  /**\n   * Constructor\n   *\n   * @param {HttpClient} _httpClient\n   */\n  constructor(private _httpClient: HttpClient, private todoService: TodoManagementService) {\n    this.onTodoDataChange = new BehaviorSubject({});\n    this.onCurrentTodoChange = new BehaviorSubject({});\n    this.onAssigneeChange = new BehaviorSubject({});\n    this.onFilterChange = new BehaviorSubject({});\n    this.onTagChange = new BehaviorSubject({});\n    this.onSearchQueryChange = new BehaviorSubject({});\n    this.onFiltersChange = new BehaviorSubject({});\n    this.onTagsChange = new BehaviorSubject({});\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> | Promise<any> | any {\n    this.routeParams = route.params;\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([this.getTodosList(), this.getFilters(), this.getTags(), this.getAssignee()]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Todos List\n   *\n   * @returns {Promise<Todo[]>}\n   */\n  getTodosList(): Promise<any[]> {\n    if (this.routeParams.filter) {\n      return this.getTodosByFilter(this.routeParams.filter);\n    }\n\n    if (this.routeParams.tag) {\n      return this.getTodosByTag(this.routeParams.tag);\n    }\n  }\n\n  /**\n   * Get Filters\n   */\n  getFilters() {\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.get(\"api/todos-filters\").subscribe((filters: any) => {\n        this.filters = filters;\n        this.onFiltersChange.next(this.filters);\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Tags\n   */\n  getTags() {\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.get(\"api/todos-tags\").subscribe((tags: any) => {\n        this.tags = tags;\n        this.onTagsChange.next(this.tags);\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Todos By Filter\n   *\n   * @param filterHandel\n   */\n  async getTodosByFilter(filterHandel): Promise<any[]> {\n    let param, errors, todos;\n    // Setup param for filter\n    if (filterHandel === \"all\") {\n      let { data: todo, error } = await this.todoService.getTodo();\n      errors = error;\n      todos = todo;\n    } else if (filterHandel === \"deleted\") {\n      let { data: todo, error } = await this.todoService.getDeletedTodo();\n      errors = error;\n      todos = todo;\n    } else if (filterHandel === \"important\") {\n      let { data: todo, error } = await this.todoService.getImportantTodo();\n      errors = error;\n      todos = todo;\n    } else if (filterHandel === \"completed\") {\n      let { data: todo, error } = await this.todoService.getCompletedTodo();\n      errors = error;\n      todos = todo;\n    }\n    // return new Promise((resolve, reject) => {\n    //   this._httpClient.get('api/todos-data?' + param).subscribe((todos: any) => {\n    //     this.todos = todos;\n    //     this.tempTodos = todos;\n    //     this.onTodoDataChange.next(this.todos);\n    //     this.sortTodos(this.sortParamRef);\n    //     resolve(this.todos);\n    //   }, reject);\n    // });\n\n    if (!errors) {\n      this.todos = todos;\n      this.tempTodos = todos;\n      this.onTodoDataChange.next(this.todos);\n      if (this.todos) {\n        this.sortTodos(this.sortParamRef);\n      }\n    }\n\n    return new Promise((res, rej) => {\n      res(this.todos);\n    });\n  }\n\n  /**\n   * Get Todos By Tag\n   *\n   * @param tagHandel\n   */\n  async getTodosByTag(tagHandel): Promise<any[]> {\n    // return new Promise((resolve, reject) => {\n    //   this._httpClient.get(\"api/todos-data?tags=\" + tagHandel).subscribe((todos: any) => {\n    //     this.todos = todos;\n    //     this.tempTodos = todos;\n    //     this.onTodoDataChange.next(this.todos);\n    //     this.sortTodos(this.sortParamRef);\n    //     resolve(this.todos);\n    //   }, reject);\n    // });\n\n    let { data: todos, error } = await this.todoService.getTodoViaPriority(tagHandel.toLowerCase());\n\n    if (!error) {\n      this.todos = todos;\n      this.tempTodos = todos;\n      this.onTodoDataChange.next(this.todos);\n      if (this.todos) {\n        this.sortTodos(this.sortParamRef);\n      }\n    }\n\n    return new Promise((res, rej) => {\n      res(this.todos);\n    });\n  }\n\n  /**\n   * Get Todos Assignee\n   *\n   */\n  getAssignee(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(\"api/todos-assignee\").subscribe((assignee: any) => {\n        this.assignee = assignee;\n        this.onAssigneeChange.next(this.assignee);\n        resolve(this.todos);\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Todos By Search\n   *\n   * @param query\n   */\n  getTodosBySearch(query) {\n    const filteredTodos = this.tempTodos.filter((todo) => {\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    });\n    this.todos = filteredTodos;\n    this.onTodoDataChange.next(this.todos);\n    this.sortTodos(this.sortParamRef);\n  }\n\n  /**\n   * Create New Todo\n   */\n  createNewTodo() {\n    this.currentTodo = {};\n    this.onCurrentTodoChange.next(this.currentTodo);\n  }\n\n  /**\n   * Set Current Todo\n   *\n   * @param id\n   */\n  setCurrentTodo(id) {\n    this.currentTodo = this.todos.find((todo) => {\n      return todo.id === id;\n    });\n    this.onCurrentTodoChange.next(this.currentTodo);\n  }\n\n  /**\n   * Update Current Todo\n   *\n   * @param todo\n   */\n  updateCurrentTodo(todo) {\n    if (todo.id === undefined) {\n      this.currentTodo = todo;\n      this.onCurrentTodoChange.next(this.currentTodo);\n      this.postNewTodo();\n    } else {\n      this.currentTodo = todo;\n      this.onCurrentTodoChange.next(this.currentTodo);\n      this.postTodo();\n    }\n  }\n\n  /**\n   * Post Todo (Update Todo to fake-db)\n   */\n  async postTodo() {\n    // return new Promise((resolve, reject) => {\n    //   this._httpClient.post(\"api/todos-data/\" + this.currentTodo.id, { ...this.currentTodo }).subscribe((response) => {\n    //     this.getTodosList().then((todos) => {\n    //       resolve(todos);\n    //     }, reject);\n    //   });\n    // });\n\n    let { data: todo, error } = await this.todoService.updateTodo(this.currentTodo);\n\n    if (!error) {\n      this.getTodosList().then((todos) => {\n        this.sortTodos(this.sortParamRef);\n        return new Promise((resolve, reject) => resolve(todos));\n      });\n    }\n  }\n\n  /**\n   * Post New Todo (Add Todo to fake-db)\n   *\n   * NOTE: In this POST request fakeDB will automatically assign a ID to new Object\n   * Refer : https://stackoverflow.com/questions/50861850/id-should-be-optional-in-angular-in-memory-web-api\n   */\n  async postNewTodo() {\n    // return new Promise((resolve, reject) => {\n    //   this._httpClient.post(\"api/todos-data/\", this.currentTodo).subscribe((response) => {\n    //     this.getTodosList().then((todos) => {\n    //       this.sortTodos(this.sortParamRef);\n    //       resolve(todos);\n    //     }, reject);\n    //   });\n    // });\n\n    let { data: todo, error } = await this.todoService.createNewTodo(this.currentTodo);\n\n    if (!error) {\n      this.getTodosList().then((todos) => {\n        this.sortTodos(this.sortParamRef);\n        return new Promise((resolve, reject) => resolve(todos));\n      });\n    }\n  }\n\n  /**\n   * Sort Todos\n   *\n   * @param sortByParam\n   */\n  sortTodos(sortByParam) {\n    this.sortParamRef = sortByParam;\n    let sortDesc = true;\n\n    const sortBy = (() => {\n      if (sortByParam === \"title-asc\") {\n        sortDesc = false;\n        return \"title\";\n      }\n      if (sortByParam === \"title-desc\") return \"title\";\n      if (sortByParam === \"assignee\") {\n        sortDesc = false;\n        return \"assignee\";\n      }\n      if (sortByParam === \"due-date\") {\n        sortDesc = false;\n        return \"dueDate\";\n      }\n      return \"id\";\n    })();\n\n    if (sortByParam !== null) {\n      this.todos = this.todos.sort(this.sortTodoRef(sortBy));\n      if (sortDesc) this.todos.reverse();\n\n      this.onTodoDataChange.next(this.todos);\n    }\n  }\n}\n"],"names":["BehaviorSubject","TodoService","constructor","_httpClient","todoService","key","a","b","fieldA","fieldB","Date","assignee","fullName","comparison","onTodoDataChange","onCurrentTodoChange","onAssigneeChange","onFilterChange","onTagChange","onSearchQueryChange","onFiltersChange","onTagsChange","resolve","route","routeParams","params","Promise","reject","all","getTodosList","getFilters","getTags","getAssignee","then","filter","getTodosByFilter","tag","getTodosByTag","get","subscribe","filters","next","tags","filterHandel","param","errors","todos","data","todo","error","getTodo","getDeletedTodo","getImportantTodo","getCompletedTodo","tempTodos","sortTodos","sortParamRef","res","rej","tagHandel","getTodoViaPriority","toLowerCase","getTodosBySearch","query","filteredTodos","title","includes","createNewTodo","currentTodo","setCurrentTodo","id","find","updateCurrentTodo","undefined","postNewTodo","postTodo","updateTodo","sortByParam","sortDesc","sortBy","sort","sortTodoRef","reverse","i0","factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}