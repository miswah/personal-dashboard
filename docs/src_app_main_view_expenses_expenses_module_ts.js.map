{"version":3,"file":"src_app_main_view_expenses_expenses_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;ICYQ,0EAA2C;IAAA,uDAAiC;;IAAA,4DAAO;;;IAAxC,0DAAiC;IAAjC,oJAAiC;;;IAC5E,2EAA8C;IAAA,uDAAiC;;IAAA,4DAAO;;;IAAxC,0DAAiC;IAAjC,oJAAiC;;;IATjF,wEAA0G;IAErG,uDACD;IAAA,uEAA2B;IACzB,uDACF;IAAA,4DAAI;IAGN,gHAAmF;IACnF,gHAAsF;IACxF,4DAAK;;;;IARA,0DACD;IADC,qFACD;IACE,0DACF;IADE,oFACF;IAGK,0DAAe;IAAf,kFAAe;IACf,0DAAgB;IAAhB,mFAAgB;;ADNxB,MAAM,aAAa;IAIxB,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;0EANR,aAAa;2GAAb,aAAa;QCP1B,yEAA+B;QAED,uDAAsB;;QAAA,4DAAI;QACpD,wEAAuB;QACrB,uGAUK;QACP,4DAAK;;QAbqB,0DAAsB;QAAtB,+IAAsB;QAE8C,0DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;;;;;;;;ACH5B;;;;;;;ICM9E,sEAAsC;IACpC,yEAAyD;IAC3D,4DAAM;;;IADM,0DAAgB;IAAhB,4EAAgB;;;;IAO9B,yEAA0B;IAC6B,4EAAiB;IAAA,4DAAK;IAC3E,4EAA8F;IAA1D,wRAAS,2EAAc,aAAa,CAAC,KAAC;IACxE,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAG3C,0EAAkD;IAChB,8SAAY,2EAAU,KAAC;IACrD,0EAAiB;IAGa,iEAAK;IAAA,4DAAQ;IACrC,wEAA4G;IAC9G,4DAAM;IAGR,2EAA2C;IAEf,mEAAO;IAAA,4DAAQ;IACvC,wEAAgH;IAClH,4DAAM;IAIV,2EAAiB;IAGa,+DAAG;IAAA,4DAAQ;IACnC,wEAAwG;IAC1G,4DAAM;IAGR,2EAAgD;IAG1C,4EAA8I;IAC9I,2EAAgC;IACkC,wSAAS,sEAAgB,KAAC;IAA4B,4DAAS;IAOzI,2EAAiB;IAGa,iEAAK;IAAA,4DAAQ;IACrC,wEAA6G;IAC/G,4DAAM;IAKd,2EAA0B;IACsB,iWAAS,eAAY,cAAc,CAAC,SAAE,4EAAU,KAAC;IAAc,kEAAM;IAAA,4DAAS;IAG9H,wDACF;;;;IApDU,0DAAyB;IAAzB,yFAAyB;IAmDjC,2DACF;IADE,uKACF;;ADjEO,MAAM,oBAAoB;IAkB/B,YAAoB,YAAsB,EAAU,YAAgC;QAAhE,iBAAY,GAAZ,YAAY,CAAU;QAAU,iBAAY,GAAZ,YAAY,CAAoB;QAjB7E,aAAQ,GAAG;YAChB,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,EAAE;YACvH;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,IAAI,EAAE;oBACJ,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,iBAAiB,EAAE;oBAC7E,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,iBAAiB,EAAE;iBACzE;aACF;SACF,CAAC;QAMM,UAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAEkD,CAAC;IAExF,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,EAAE,+DAAmB,CAAC;YAC3H,KAAK,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,GAAG,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC9B,MAAM,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhC,+BAA+B;QAC/B,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,iCAAiC;IACjC,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;;wFApDU,oBAAoB;kHAApB,oBAAoB;;QCTjC,yEAAuC;QAGjC,oEACA;QAAA,4EAAkG;QAA/B,yRAAS,8EAAoB,KAAC;QAAC,kEAAO;QAAA,4DAAS;QAGpH,gHAEM;QACR,4DAAM;QAIR,6MA4Dc;;QAnEe,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;;;ACCjC,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;+GAAjB,iBAAiB;QCR9B,yEAAiB;QAEb,8EAAqC;QACvC,4DAAM;QACN,yEAAmB;QACjB,6EAAmC;QACrC,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACLuC;AACU;AACF;AACmB;AACG;AACtB;AACD;AACC;AACF;;;AAErD,QAAQ;AACR,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAiB,EAAE,KAAK,EAAE,YAAY,GAAG,uEAAiB,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;AAMtI,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GAFf,yDAAY,EAAE,kEAAqB,CAAC,MAAM,CAAC,EAAE,iEAAS,EAAE,+DAAmB;mIAE1E,cAAc,mBAHV,kEAAiB,EAAE,mFAAmB,EAAE,sFAAoB,EAAE,+DAAa,aAChF,yDAAY,EAAE,2DAA+B,iEAAS,EAAE,+DAAmB;;;;;;;;;;;;;;;;;;;;ACfL;;;;;;;ICK9E,sEAAoC;IAClC,yEAAyD;IAC3D,4DAAM;;;IADM,0DAAe;IAAf,2EAAe;;;;IAO7B,yEAA0B;IAC6B,4EAAiB;IAAA,4DAAK;IAC3E,4EAA8F;IAA1D,uRAAS,2EAAc,aAAa,CAAC,KAAC;IACxE,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAG3C,0EAAkD;IACjB,6SAAY,2EAAU,KAAC;IACpD,0EAAiB;IAGa,iEAAK;IAAA,4DAAQ;IACrC,wEAA4G;IAC9G,4DAAM;IAGR,2EAA2C;IAEf,mEAAO;IAAA,4DAAQ;IACvC,wEAAgH;IAClH,4DAAM;IAIV,2EAAiB;IAGa,+DAAG;IAAA,4DAAQ;IACnC,wEAAwG;IAC1G,4DAAM;IAGR,2EAAgD;IAG1C,4EAA8I;IAC9I,2EAAgC;IACkC,uSAAS,sEAAgB,KAAC;IAA4B,4DAAS;IAOzI,2EAAiB;IAGa,iEAAK;IAAA,4DAAQ;IACrC,wEAA6G;IAC/G,4DAAM;IAKd,2EAA0B;IACsB,gWAAS,eAAY,cAAc,CAAC,SAAE,4EAAU,KAAC;IAAc,kEAAM;IAAA,4DAAS;IAG9H,wDACF;;;;IApDU,0DAAwB;IAAxB,wFAAwB;IAmDhC,2DACF;IADE,sKACF;;ADhEO,MAAM,mBAAmB;IAY9B,YAAoB,YAAsB,EAAU,YAAgC;QAAhE,iBAAY,GAAZ,YAAY,CAAU;QAAU,iBAAY,GAAZ,YAAY,CAAoB;QAX7E,YAAO,GAAG;YACf;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,IAAI,EAAE;oBACJ,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,iBAAiB,EAAE;oBAC7E,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,iBAAiB,EAAE;iBACzE;aACF;YACD,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,EAAE;SACxH,CAAC;IAEqF,CAAC;IAExF,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxC,IAAI,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,GAAG,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC9B,MAAM,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhC,+BAA+B;QAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3B,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,iCAAiC;IACjC,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;;sFA9CU,mBAAmB;iHAAnB,mBAAmB;;QCThC,yEAAwC;QAGlC,mEACA;QAAA,4EAAkG;QAA/B,wRAAS,8EAAoB,KAAC;QAAC,kEAAO;QAAA,4DAAS;QAEpH,+GAEM;QACR,4DAAM;QAIR,4MA4Dc;;QAnEc,0DAAU;QAAV,gFAAU","sources":["./src/app/main/view/expenses/card/card.component.ts","./src/app/main/view/expenses/card/card.component.html","./src/app/main/view/expenses/expense-list/expense-list.component.ts","./src/app/main/view/expenses/expense-list/expense-list.component.html","./src/app/main/view/expenses/expenses.component.ts","./src/app/main/view/expenses/expenses.component.html","./src/app/main/view/expenses/expenses.module.ts","./src/app/main/view/expenses/income-list/income-list.component.ts","./src/app/main/view/expenses/income-list/income-list.component.html"],"sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.scss\"],\n})\nexport class CardComponent implements OnInit {\n  @Input() data;\n  @Input() isExpense: boolean;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"card chapter-list\">\n  <div class=\"card-body\">\n    <p class=\"card-tite lead\">{{ data.date | date }}</p>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let d of data.data\">\n        <span\n          >{{ d.title }}\n          <p class=\"text-muted no-p\">\n            {{ d.tag }}\n          </p></span\n        >\n\n        <span *ngIf=\"isExpense\" style=\"color: red\">{{ d.amount | currency : \"INR\" }}</span>\n        <span *ngIf=\"!isExpense\" style=\"color: green\">{{ d.amount | currency : \"INR\" }}</span>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { NgbDateStruct, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-expense-list\",\n  templateUrl: \"./expense-list.component.html\",\n  styleUrls: [\"./expense-list.component.scss\"],\n})\nexport class ExpenseListComponent implements OnInit {\n  public expenses = [\n    { date: \"2022-10-30T09:00:00Z\", data: [{ title: \"Eggs\", tag: \"Food Order\", amount: 500, details: \"During accident\" }] },\n    {\n      date: \"2022-10-31T09:00:00Z\",\n      data: [\n        { title: \"Eggs\", tag: \"Food Order\", amount: 600, details: \"During accident\" },\n        { title: \"Eggs\", tag: \"Lunch\", amount: 800, details: \"During accident\" },\n      ],\n    },\n  ];\n\n  public expenseForm: UntypedFormGroup;\n\n  public basicDPdata: NgbDateStruct;\n\n  private today = new Date(Date.now());\n\n  constructor(private modalService: NgbModal, private _formBuilder: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.expenseForm = this._formBuilder.group({\n      date: [{ year: this.today.getFullYear(), month: this.today.getMonth(), day: this.today.getUTCDate() }, Validators.required],\n      title: [\"\", Validators.required],\n      details: [\"\", Validators.required],\n      tag: [\"\", Validators.required],\n      amount: [0, Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.expenseForm.controls;\n  }\n\n  onSubmit() {\n    console.log(this.expenseForm.value);\n    console.log(this.f.title.value);\n\n    // stop here if form is invalid\n    if (this.expenseForm.invalid) {\n      return;\n    }\n\n    console.log(this.expenseForm.value);\n  }\n\n  // modal Open Vertically Centered\n  modalOpenVC(modalVC) {\n    this.modalService.open(modalVC, {\n      centered: true,\n    });\n  }\n}\n","<div class=\"card bg-danger text-white\">\n  <div class=\"card-body\">\n    <h4 class=\"card-title text-white\">\n      Expense\n      <button type=\"button\" class=\"btn btn-dark pull-right\" rippleEffect (click)=\"modalOpenVC(modalVC)\">Add New</button>\n    </h4>\n\n    <div *ngFor=\"let expense of expenses\">\n      <app-card [data]=\"expense\" [isExpense]=\"true\"></app-card>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<ng-template #modalVC let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">Add a new Expense</h5>\n    <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n    <form [formGroup]=\"expenseForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Title\" formControlName=\"title\" />\n          </div>\n        </div>\n\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Details</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Details\" formControlName=\"details\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Tag</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Tag\" formControlName=\"tag\" />\n          </div>\n        </div>\n\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1 mt-2\">\n          <div class=\"form-group\">\n            <div class=\"input-group\">\n              <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Basic Date Picker\" formControlName=\"date\" ngbDatepicker #basicDP=\"ngbDatepicker\" />\n              <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"basicDP.toggle()\" type=\"button\" rippleEffect></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Price</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Price\" formControlName=\"amount\" />\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close('Accept click'); onSubmit()\" rippleEffect>Accept</button>\n  </div>\n\n  {{ expenseForm.value | json }}\n</ng-template>\n<!-- / Modal -->\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-expenses',\n  templateUrl: './expenses.component.html',\n  styleUrls: ['./expenses.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ExpensesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <app-expense-list></app-expense-list>\n  </div>\n  <div class=\"col-6\">\n    <app-income-list></app-income-list>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ExpensesComponent } from \"./expenses.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { IncomeListComponent } from \"./income-list/income-list.component\";\nimport { ExpenseListComponent } from \"./expense-list/expense-list.component\";\nimport { environment } from \"environments/environment\";\nimport { CardComponent } from \"./card/card.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n//Routes\nconst routes: Routes = [{ path: \"\", component: ExpensesComponent, title: \"Expense - \" + environment.title, data: { animation: \"expense\" } }];\n\n@NgModule({\n  declarations: [ExpensesComponent, IncomeListComponent, ExpenseListComponent, CardComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ReactiveFormsModule],\n})\nexport class ExpensesModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-income-list\",\n  templateUrl: \"./income-list.component.html\",\n  styleUrls: [\"./income-list.component.scss\"],\n})\nexport class IncomeListComponent implements OnInit {\n  public incomes = [\n    {\n      date: \"2022-10-31T09:00:00Z\",\n      data: [\n        { title: \"Eggs\", tag: \"Food Order\", amount: 600, details: \"During accident\" },\n        { title: \"Eggs\", tag: \"Lunch\", amount: 800, details: \"During accident\" },\n      ],\n    },\n    { date: \"2022-10-30T09:00:00Z\", data: [{ title: \"Eggs\", tag: \"Food Order\", amount: 500, details: \"During accident\" }] },\n  ];\n  public incomeForm: UntypedFormGroup;\n  constructor(private modalService: NgbModal, private _formBuilder: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.incomeForm = this._formBuilder.group({\n      date: [\"\", Validators.required],\n      title: [\"\", Validators.required],\n      details: [\"\", Validators.required],\n      tag: [\"\", Validators.required],\n      amount: [0, Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.incomeForm.controls;\n  }\n\n  onSubmit() {\n    console.log(this.incomeForm.value);\n    console.log(this.f.title.value);\n\n    // stop here if form is invalid\n    if (this.incomeForm.invalid) {\n      return;\n    }\n\n    console.log(this.incomeForm.value);\n  }\n\n  // modal Open Vertically Centered\n  modalOpenVC(modalVC) {\n    this.modalService.open(modalVC, {\n      centered: true,\n    });\n  }\n}\n","<div class=\"card bg-success text-white\">\n  <div class=\"card-body\">\n    <h4 class=\"card-title text-white\">\n      Income\n      <button type=\"button\" class=\"btn btn-dark pull-right\" rippleEffect (click)=\"modalOpenVC(modalVC)\">Add New</button>\n    </h4>\n    <div *ngFor=\"let income of incomes\">\n      <app-card [data]=\"income\" [isExpense]=\"false\"></app-card>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<ng-template #modalVC let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">Add a new Expense</h5>\n    <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n    <form [formGroup]=\"incomeForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Title\" formControlName=\"title\" />\n          </div>\n        </div>\n\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Details</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Details\" formControlName=\"details\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Tag</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Tag\" formControlName=\"tag\" />\n          </div>\n        </div>\n\n        <div class=\"col-xl-6 col-md-6 col-12 mb-1 mt-2\">\n          <div class=\"form-group\">\n            <div class=\"input-group\">\n              <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Basic Date Picker\" formControlName=\"date\" ngbDatepicker #basicDP=\"ngbDatepicker\" />\n              <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"basicDP.toggle()\" type=\"button\" rippleEffect></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12 mb-1\">\n          <div class=\"form-group\">\n            <label for=\"basicInput\">Price</label>\n            <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter Price\" formControlName=\"amount\" />\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close('Accept click'); onSubmit()\" rippleEffect>Accept</button>\n  </div>\n\n  {{ incomeForm.value | json }}\n</ng-template>\n<!-- / Modal -->\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}