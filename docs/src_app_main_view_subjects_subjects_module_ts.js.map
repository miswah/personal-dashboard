{"version":3,"file":"src_app_main_view_subjects_subjects_module_ts.js","mappings":"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","sources":["./src/app/main/view/subjects/card/card.component.ts","./src/app/main/view/subjects/card/card.component.html","./src/app/main/view/subjects/list/list.component.html","./src/app/main/view/subjects/list/list.component.ts","./src/app/main/view/subjects/subjects-management.service.ts","./src/app/main/view/subjects/subjects.component.ts","./src/app/main/view/subjects/subjects.component.html","./src/app/main/view/subjects/subjects.module.ts","./src/app/main/view/subjects/view/view.component.html","./src/app/main/view/subjects/view/view.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.scss\"],\n})\nexport class CardComponent implements OnInit {\n  @Input() subject;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">{{ subject.title }}</h4>\n    <div class=\"card-text\">\n      <div class=\"row text-center\">\n        <div class=\"col-2\">\n          <p>{{ subject.subject_code }}</p>\n          <p class=\"subject-card-title\">Subject Code</p>\n        </div>\n        <div class=\"col-2\">\n          <p>{{ subject.blocks }}</p>\n          <p class=\"subject-card-title\">Number of block</p>\n        </div>\n        <div class=\"col-2\">\n          <p>{{ subject.chapters }}</p>\n          <p class=\"subject-card-title\">Number of Chapters</p>\n        </div>\n        <div class=\"col-2\">\n          <p>{{ subject.completed_chapters }}</p>\n          <p class=\"subject-card-title\">Completed Chapters</p>\n        </div>\n        <div class=\"col-2\">\n          <p>{{ subject.next_chapter }}</p>\n          <p class=\"subject-card-title\">Next Chapter</p>\n        </div>\n        <div class=\"col-2\">\n          <p>{{ subject.next_important_date | date }}</p>\n          <p class=\"subject-card-title\">Next Important Date</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<div *ngFor=\"let item of subjects\">\n  <app-card [subject]=\"item\" (click)=\"redirectToView(item.id)\"></app-card>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { SubjectsManagementService } from \"../subjects-management.service\";\n\n@Component({\n  selector: \"app-list\",\n  templateUrl: \"./list.component.html\",\n  styleUrls: [\"./list.component.scss\"],\n})\nexport class ListComponent implements OnInit {\n  public subjects = [];\n  constructor(private router: Router, private subjectService: SubjectsManagementService) {}\n\n  ngOnInit(): void {\n    this.getAllSubjects();\n  }\n\n  async getAllSubjects(): Promise<void> {\n    //To avoid multiple api calls for same data check if data exists\n    if (this.subjectService.listOfSubjects) {\n      this.subjects = this.subjectService.listOfSubjects;\n      return;\n    }\n\n    let { data: subjects, error } = await this.subjectService.getSubjects();\n    if (error) {\n      console.error(\"error\", error.message);\n    } else {\n      this.subjectService.listOfSubjects = subjects;\n      this.subjects = subjects;\n    }\n  }\n\n  redirectToView(id: number) {\n    let index = this.subjects.findIndex((x) => x.id == id);\n\n    this.subjectService.subjectData = this.subjects[index];\n\n    this.router.navigate([\"../subject/view\", id]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { SupabaseClient, createClient } from \"@supabase/supabase-js\";\nimport { environment } from \"environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SubjectsManagementService {\n  private supabase: SupabaseClient;\n\n  public listOfSubjects;\n  public listOfChapters;\n  public listOfTopics;\n  public subjectData;\n\n  constructor() {\n    this.supabase = createClient(environment.supabase.url, environment.supabase.key);\n  }\n\n  getSubjects() {\n    return this.supabase.from(\"subjects\").select(\"*\").order(\"id\", { ascending: true });\n  }\n\n  getSubjectViaId(subjectId: number) {\n    return this.supabase.from(\"subjects\").select(\"*\").eq(\"id\", subjectId);\n  }\n\n  getChapters(subjectId: Number) {\n    return this.supabase.from(\"subject_chapters\").select(\"*\").eq(\"subject_id\", subjectId).order(\"id\", { ascending: true });\n  }\n\n  updateChapterStatus(chapterId: number, status: boolean) {\n    return this.supabase.from(\"subject_chapters\").update({ is_completed: status }).eq(\"id\", chapterId);\n  }\n\n  getTopics(subjectId: Number) {\n    return this.supabase.from(\"subject_topics\").select(\"*\").eq(\"subject_id\", subjectId).order(\"id\", { ascending: true });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subjects',\n  templateUrl: './subjects.component.html',\n  styleUrls: ['./subjects.component.scss']\n})\nexport class SubjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>subjects works!</p>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SubjectsComponent } from \"./subjects.component\";\nimport { ListComponent } from \"./list/list.component\";\nimport { ViewComponent } from \"./view/view.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { environment } from \"environments/environment\";\nimport { CardComponent } from \"./card/card.component\";\n\n//Routing\nconst routes: Routes = [\n  { path: \"\", component: ListComponent, title: \"Subjects - \" + environment.title, data: { animation: \"subject\" } },\n  { path: \"view/:id\", component: ViewComponent, title: \"Subjects - \" + environment.title, data: { animation: \"view\" } },\n];\n\n@NgModule({\n  declarations: [SubjectsComponent, ListComponent, ViewComponent, CardComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class SubjectsModule {}\n","<div class=\"card\" *ngIf=\"subject\">\n  <div class=\"card-body\">\n    <p class=\"card-title text-center\">{{ subject.subject_code }} - {{ subject.title }}</p>\n    <div class=\"row text-center\">\n      <div class=\"col-2\">\n        <p>{{ subject.blocks }}</p>\n        <p>Block</p>\n      </div>\n\n      <div class=\"col-2\">\n        <p>{{ subject.total_chapters }}</p>\n        <p>Total Chapters</p>\n      </div>\n\n      <div class=\"col-2\">\n        <p>{{ subject.completed_chapters }}</p>\n        <p>Completed Chapters</p>\n      </div>\n\n      <div class=\"col-2\">\n        <p>{{ subject.next_chapter }}</p>\n        <p>Next Chapter</p>\n      </div>\n\n      <div class=\"col-2\">\n        <p>{{ subject.next_important_date | date }}</p>\n        <p>Next Important Date</p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"card chapter-list\">\n        <div class=\"card-body\">\n          <p class=\"card-tite\">Chapter List</p>\n          <ul class=\"list-group\">\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let chapter of chapters\">\n              <span>{{ chapter.title }}</span>\n              <button type=\"button\" class=\"btn btn-flat-success\" rippleEffect *ngIf=\"chapter.is_completed\"><span [data-feather]=\"'check'\" [class]=\"'mr-25'\"></span>Completed</button>\n              <button type=\"button\" class=\"btn btn-outline-primary\" rippleEffect *ngIf=\"!chapter.is_completed\" (click)=\"updateChapterStatus(chapter.id)\"><span [data-feather]=\"'check'\" [class]=\"'mr-25'\"></span>Done</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-6\">\n      <div class=\"card chapter-list\">\n        <div class=\"card-body\">\n          <p class=\"card-tite\">Important Topic List</p>\n          <ul class=\"list-group\">\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let topic of topics\">\n              <span>{{ topic.title }}</span>\n              <span>{{ topic.chapter }}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { SubjectsManagementService } from \"../subjects-management.service\";\nimport { id } from \"@swimlane/ngx-datatable\";\n\n@Component({\n  selector: \"app-view\",\n  templateUrl: \"./view.component.html\",\n  styleUrls: [\"./view.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ViewComponent implements OnInit {\n  public subject;\n  public chapters = [];\n\n  public topics;\n\n  private subjectId: number = 0;\n\n  constructor(private route: ActivatedRoute, private subjectService: SubjectsManagementService) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((prams) => {\n      this.subjectId = +prams.get(\"id\");\n    });\n    this.getSubject(this.subjectId);\n    this.getChapters(this.subjectId);\n    this.getTopics(this.subjectId);\n  }\n\n  async getSubject(subjectId: number): Promise<void> {\n    if (this.subjectService.subjectData && this.subjectService.subjectData.id == subjectId) {\n      this.subject = this.subjectService.subjectData;\n      return;\n    }\n\n    let { data: subject, error } = await this.subjectService.getSubjectViaId(subjectId);\n\n    if (error) {\n      console.error(\"subject error\", error.message);\n    } else {\n      this.subjectService.subjectData = subject[0];\n      this.subject = subject[0];\n    }\n  }\n\n  async getChapters(subjectId: number): Promise<void> {\n    if (this.subjectService.listOfChapters && this.subjectService.listOfChapters[0].subject_id == subjectId) {\n      this.chapters = this.subjectService.listOfChapters;\n      return;\n    }\n\n    let { data: chapters, error } = await this.subjectService.getChapters(subjectId);\n\n    if (error) {\n      console.error(\"error\", error.message);\n    } else {\n      this.subjectService.listOfChapters = chapters;\n      this.chapters = chapters;\n    }\n\n    this.subjectService.getChapters(subjectId);\n  }\n\n  async getTopics(subjectId: number): Promise<void> {\n    if (this.subjectService.listOfTopics && this.subjectService.listOfTopics[0]?.subject_id == subjectId) {\n      this.topics = this.subjectService.listOfTopics;\n      return;\n    }\n\n    let { data: topics, error } = await this.subjectService.getTopics(subjectId);\n\n    if (error) {\n      console.error(\"error\", error.message);\n    } else {\n      this.subjectService.listOfTopics = topics;\n      this.topics = topics;\n    }\n  }\n\n  async updateChapterStatus(chapterId: number): Promise<void> {\n    let { data: topics, error } = await this.subjectService.updateChapterStatus(chapterId, true);\n\n    if (error) {\n      console.error(\"update Error\", error.message);\n    } else {\n      console.log(\"success\", topics);\n      let index = this.topics.findIndex((x) => x.id === chapterId);\n      this.subjectService.listOfChapters[index].is_completed = true;\n      this.topics[index].is_completed = true;\n    }\n  }\n}\n"],"names":["i0","ListComponent","constructor","router","subjectService","ngOnInit","getAllSubjects","listOfSubjects","subjects","data","error","getSubjects","console","message","redirectToView","id","index","findIndex","x","subjectData","navigate","selectors","decls","vars","consts","template","ViewComponent","route","paramMap","subscribe","prams","subjectId","get","getSubject","getChapters","getTopics","subject","getSubjectViaId","listOfChapters","subject_id","chapters","listOfTopics","topics","updateChapterStatus","chapterId","log","is_completed"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}